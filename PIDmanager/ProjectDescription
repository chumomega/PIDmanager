Authors: Adebowale Ojetola, Chuma Okoro.

We both worked on the logic as well as the documentation
#HW3
The problem statement was to modify HW2 to use mutex locks to make sure the data structure
 is safe from race conditions
 
There were no assumptions made for this HW

#HW2
The problem Statement was to create several threads “ for example, 100 “ and such that
each thread requests a pid, sleeps for a random period of time, and then releases
the pid.


Assumptions:
We made and implemented an assumption that allocate_map() was going to be called by the constructor




#hw1 
The problem statement was to create a manger for PIDs by implementing three functions 
that keeps track of unique PID numbers between the range 300 and 5000. 
The manager can also release a PID that has already been created.

Assumptions:
In order to make sure the data structure created in allocate_map is not limited in scope 
we assumed that the data structure had been declared earlier in the program.